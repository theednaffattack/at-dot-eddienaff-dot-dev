input ChangePasswordInput {
  password: String!
  token: String
}

scalar DateTime

input EditUserInput {
  firstName: String!
  lastName: String!
  email: String!
  teamId: ID!
}

input FileInput {
  id: ID!
  uri: String!
}

input GetFileObjectInput {
  id: ID!
  uri: String!
}

type Image {
  id: ID!
  uri: String!
  user: User!
}

input ImageSubInput {
  type: String!
  lastModified: Float!
  lastModifiedDate: DateTime!
  size: Int!
  name: String!
  webkitRelativePath: String!
  path: String!
}

type Mutation {
  createUser(data: RegisterInput!): User!
  changePasswordFromContextUserid(data: PasswordInput!): User
  changePasswordFromToken(data: ChangePasswordInput!): User
  confirmUser(token: String!): Boolean!
  forgotPassword(email: String!): Boolean!
  login(password: String!, email: String!): User
  logout: Boolean!
  register(data: RegisterInput!): User!
  addProfilePicture(
    data: UploadProfilePictureInput!
  ): UploadProfilePictueReturnType!
  editUserInfo(data: EditUserInput!): User!
  adminEditUserInfo(data: EditUserInput!): UserClassTypeWithReferenceIds!
  signS3(files: [ImageSubInput!]!, action: S3SignatureAction!): SignedS3Payload!
  signS3GetObject(
    files: [FileInput!]!
    action: S3SignatureAction = getObject
  ): SignedS3Payload!
}

input PasswordInput {
  password: String!
}

type Query {
  # me: User
  # helloWorld: String!
  viewer: User!
}

input RegisterInput {
  password: String!
  firstName: String!
  lastName: String!
  email: String!
}

enum S3SignatureAction {
  putObject
  getObject
}

type SignedS3Payload {
  signatures: [SignedS3SubPayload!]!
}

type SignedS3SubPayload {
  uri: String!
  signedRequest: String!
}

type UploadProfilePictueReturnType {
  message: String!
  profileImgUrl: String!
}

input UploadProfilePictureInput {
  user: ID!
  image: String
}

type User {
  id: ID
  firstName: String
  lastName: String
  email: String
  followers: [User]
  following: [User]
  profileImageUri: String
  name: String
  images: [Image!]!
}

type UserClassTypeWithReferenceIds {
  id: ID
  firstName: String
  lastName: String
  email: String
  followers: [User]
  following: [User]
  profileImageUri: String
  name: String
  team_ownership: String!
}
